&НаСервере
Перем ИдКомпоненты, АдресКомпоненты;

&НаСервере
Перем ВК, ПК, Буф, ГИТ;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для каждого ЭлементСписка из СписокУзлов Цикл
		Элементы.Результаты.Развернуть(ЭлементСписка.Значение, Истина);
	КонецЦикла;
	СписокУзлов.Очистить();
	
//	ПодключитьОбработчикОжидания("ЗавершитьРаботу", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаботу()
	
	ЗавершитьРаботуСистемы(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ФайлОбработки = Новый Файл(ОбработкаОбъект.ИспользуемоеИмяФайла);
	ТекущийКаталог = ФайлОбработки.Путь;
	
	ИдКомпоненты = "_" + StrReplace(New UUID, "-", "");
	МакетКомпоненты = ОбработкаОбъект.ПолучитьМакет("VanessaExt");
	АдресКомпоненты = ПоместитьВоВременноеХранилище(МакетКомпоненты, УникальныйИдентификатор);
	
	ВыполнитьТесты();
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьСтрокуJSON(ТекстJSON)
	
	Если ПустаяСтрока(ТекстJSON) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПоляДаты = Новый Массив;
	ПоляДаты.Добавить("CreationDate");
	ПоляДаты.Добавить("date");
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ТекстJSON);
	Возврат ПрочитатьJSON(ЧтениеJSON, , ПоляДаты);
	
КонецФункции

&НаСервере
Функция ДобавитьГруппуТестов(Родитель, Наименование)
	
	Стр = Родитель.ПолучитьЭлементы().Добавить();
	СписокУзлов.Добавить(Стр.ПолучитьИдентификатор());
	Стр.Наименование = Наименование;
	Возврат Стр;

КонецФункции

&НаСервере
Процедура УстановитьФлагОшибки(ТекущаяСтрока)
	
	Стр = ТекущаяСтрока;
	Пока Стр <> Неопределено Цикл
		Стр.Ошибка = Истина;
		Стр = Стр.ПолучитьРодителя();
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Функция ТестВычислить(Группа, ИмяТеста, Выражение)
	
	Стр = Группа.ПолучитьЭлементы().Добавить();
	Стр.Наименование = ИмяТеста;
	Стр.Выражение = Выражение;
	Попытка
		Значение = Вычислить(Выражение);
		Стр.Результат = Значение;
		Стр.Подробности = Значение;
	Исключение
		Значение = Неопределено;
		УстановитьФлагОшибки(Стр);
		Информация = ИнформацияОбОшибке();
		Стр.Результат = КраткоеПредставлениеОшибки(Информация);
		Стр.Подробности = ПодробноеПредставлениеОшибки(Информация);
		Стр.Ошибка = Истина;
	КонецПопытки;
	
	Возврат Значение;
	
КонецФункции

&НаСервере
Процедура ТестВыполнить(Группа, ИмяТеста, Выражение)
	
	Стр = Группа.ПолучитьЭлементы().Добавить();
	Стр.Наименование = ИмяТеста;
	Стр.Выражение = Выражение;
	Попытка
		Выполнить(Выражение);
	Исключение
		Значение = Неопределено;
		УстановитьФлагОшибки(Стр);
		Информация = ИнформацияОбОшибке();
		Стр.Результат = КраткоеПредставлениеОшибки(Информация);
		Стр.Подробности = ПодробноеПредставлениеОшибки(Информация);
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьТесты()
	
	Группа = ДобавитьГруппуТестов(Результаты, "Инициализация библиотеки");
	ТестВычислить(Группа, "ПодключениеБиблиотеки", "ПодключитьВнешнююКомпоненту(АдресКомпоненты, ИдКомпоненты, ТипВнешнейКомпоненты.Native)");
	ВК = ТестВычислить(Группа, "Новый:WindowsControl", "Новый(""AddIn." + ИдКомпоненты + ".WindowsControl"")");
	ПК = ТестВычислить(Группа, "Новый:ProcessControl", "Новый(""AddIn." + ИдКомпоненты + ".ProcessControl"")");
	Буф = ТестВычислить(Группа, "Новый:ClipboardControl", "Новый(""AddIn." + ИдКомпоненты + ".ClipboardControl"")");
	ГИТ = ТестВычислить(Группа, "Новый:GitFor1C", "Новый(""AddIn." + ИдКомпоненты + ".GitFor1C"")");
	
	Группа = ДобавитьГруппуТестов(Результаты, "Свойства WindowsControl");
	
	ТестВычислить(Группа, "Получить:Version", "ВК.Version");
	ТестВычислить(Группа, "Получить:Версия", "ВК.Версия");
	ТестВычислить(Группа, "Получить:ВЕРСИЯ", "ВК.ВЕРСИЯ");
	ТестВычислить(Группа, "Получить:ProcessId", "ВК.ProcessId");
	ТестВычислить(Группа, "ИдентификаторПроцесса", "ВК.ИдентификаторПроцесса");
	ТестВыполнить(Группа, "Установить:ТекстБуфераОбмена", "ВК.ТекстБуфераОбмена = ""ТекстБуфераОбмена""");
	ТестВычислить(Группа, "Получить:ТекстБуфераОбмена", "ВК.ТекстБуфераОбмена");
	ТестВыполнить(Группа, "Проверка генерации рошибки", "ВК.Проверка = ""Тест""");
	
	Группа = ДобавитьГруппуТестов(Результаты, "Методы WindowsControl");
	ТестВычислить(Группа, "ПолучитьСписокОкон()", "ВК.ПолучитьСписокОкон(ВК.ИдентификаторПроцесса)");
	
	
	ИмяПапки = "Autotest";
	ВременнаяПапка = ПолучитьИмяВременногоФайла("git");
	УдалитьФайлы(ВременнаяПапка);
	СоздатьКаталог(ВременнаяПапка);
	ВременнаяПапка = ВременнаяПапка + "/" + ИмяПапки + "/";
	СоздатьКаталог(ВременнаяПапка);
	
	ИмяФайла = "example.txt";
	ПолноеИмя = ВременнаяПапка + ИмяФайла;
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.ДобавитьСтроку(ЧислоПрописью(51243, "L=en_US"));
	ТекстовыйДокумент.ДобавитьСтроку(ЧислоПрописью(24565, "L=en_US"));
	ТекстовыйДокумент.Записать(ПолноеИмя, КодировкаТекста.UTF8);
	
	Группа = ДобавитьГруппуТестов(Результаты, "Тетирование GitFor1C");
	ТестВычислить(Группа, "version", "ГИТ.Версия");
	ТестВычислить(Группа, "init", "ГИТ.init(""" + ВременнаяПапка +""")");
	ТестВычислить(Группа, "status", "ГИТ.status()");
	ТестВычислить(Группа, "status", "ГИТ.add(""" + ИмяФайла + """)");
	ТестВычислить(Группа, "status", "ГИТ.status()");
	
КонецПроцедуры